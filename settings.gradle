pluginManagement {
    repositories {
        mavenLocal()
        maven {
            allowInsecureProtocol = true
            url 'http://dl.bintray.com/umsdk/release'
        }
        google()
        mavenCentral()
        gradlePluginPortal()
    }
}
enableFeaturePreview('VERSION_CATALOGS')
dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
    repositories {
        mavenLocal()
        maven { url 'https://maven.aliyun.com/repository/releases' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        maven { url 'https://maven.aliyun.com/repository/public' }
        google()
        mavenCentral()
    }
    versionCatalogs {
        create('androidxLibs') {
            // 别名 group artifact version
            library('core-ktx', 'androidx.core', 'core-ktx').version('1.7.0')
            library('livedata', 'androidx.lifecycle', 'lifecycle-livedata-ktx').version('2.6.1')
            library('viewmodel', 'androidx.lifecycle', 'lifecycle-viewmodel-ktx').version('2.6.1')
//            library('fragment', 'androidx.fragment', 'fragment-ktx').version('1.9.0')
            library('appcompat', 'androidx.appcompat', 'appcompat').version('1.4.1')
            library('constraintlayout', 'androidx.constraintlayout', 'constraintlayout').version('2.1.3')
            library('material', 'com.google.android.material', 'material').version('1.5.0')
            library('navigation-fragment', 'androidx.navigation', 'navigation-fragment-ktx').version('2.3.5')
            library('navigation-ui', 'androidx.navigation', 'navigation-ui-ktx').version('2.3.5')
            // androidX通用依赖
            bundle('androidx', ['navigation-fragment','navigation-ui','core-ktx', 'appcompat', 'constraintlayout','livedata', 'viewmodel'])

            // nav-plugin
            library('asm', 'org.ow2.asm', 'asm').version('9.2')
            library('asm-tree', 'org.ow2.asm', 'asm-tree').version('9.2')
            library('commons-io', 'commons-io', 'commons-io').version('2.6')
            library('kotlinpoet', 'com.squareup', 'kotlinpoet').version('1.2.0')
            library('agp', 'com.android.tools.build', 'gradle').version('7.4.1')
            bundle('nav-plugin',['asm','asm-tree','commons-io','kotlinpoet','agp'])

            //gson
            library('gson','com.google.code.gson','gson').version('2.10.1')

            //retrofit
            library('retrofit','com.squareup.retrofit2','retrofit').version('2.9.0')

        }
        create('googleLibs') {
            library('material', 'com.google.android', 'material').version('1.5.0')
        }

        /**
         * 在app/build.gradle中
         * compileSdk:buildsdk.versions.compilesdk.get().toInteger()
         */
        create('buildsdk') {
            version('compilesdk', '33')
            version('minisdk', '23')
            version('targetsdk', '33')
        }
        /**
         * 1、只需在app/build.gradle中alias(pluginLibs.plugins.hilt.android)即可
         * 2、对于没有发布到gradlePluginPortal的插件，暂时沿用老的模式，即buildScript { dependencies{  classpath 'xxx.xxx.xxx:1.0.0'}}
         * create('pluginLibs'){
         *    plugin('hilt-android','com.google.dagger.hilt.android').version('2.41')
         * }
         */
    }
}
rootProject.name = "CatFacts"
include(":app")
include ':data-plugin'
include ':common-plugin'